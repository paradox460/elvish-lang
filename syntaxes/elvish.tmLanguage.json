{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Elvish",
  "patterns": [
    {
      "include": "#builtinVars"
    },
    {
      "include": "#builtinFuncs"
    },
    {
      "include": "#builtinMisc"
    },
    {
      "include": "#builtinFlow"
    },
    {
      "include": "#builtinMath"
    },
    {
      "include": "#comment"
    },
    {
      "include": "#singleQuotedString"
    },
    {
      "include": "#doubleQuotedString"
    },
    {
      "include": "#map"
    },
    {
      "include": "#elvishEnvar"
    },
    {
      "include": "#functionDef"
    }
  ],
  "repository": {
    "builtinVars": {
      "name": "constant.language.elvish",
      "match": "\\$(_|args|false|ok|value-out-indicator|paths|pid|pwd|true)"
    },
    "builtinFuncs": {
      "comment": "Elvish builtin funcs",
      "match": "[^\\/-]\\b((not-eq|all|and|assoc|bool|cd|constantly|count|dissoc|drop|each|eawk|echo|eq|exec|exit|explode|external|fail|fclose|fopen|from-json|has-external|has-prefix|has-suffix|is|joins|keys|kind-of|nop|not|or|ord|path-abs|path-base|path-clean|path-dir|path-ext|peach|pipe|prclose|put|pprint|print|pwclose|range|rand|randint|repeat|replaces|repr|resolve|run-parallel|search-external|slurp|splits|src|take|tilde-abbr|to-json|to-string|wcswidth))[\\b\\n )]",
      "captures": {
        "1": {
          "name": "support.function.elvish"
        }
      }
    },
    "builtinMisc": {
      "comment": "Misc. Elvish builtins",
      "match": "\\b(del|use)\\b",
      "name": "support.function.elvish"
    },
    "builtinFlow": {
      "match": "\\b((if|elif|else|while|for|try|except|finally|nop|return))\\b\\s+",
      "captures": {
        "1": {
          "name": "keyword.control.elvish"
        }
      }
    },
    "builtinMath": {
      "match": "(\\s|\\()((\\+ |\\- |\\* |\\/ |\\% |\\^|\\<\\=?s?|\\>\\=?s?|\\=\\=s?|\\!\\=s?))",
      "captures": {
        "2": {
          "name": "keyword.operator.elvish"
        }
      }
    },
    "comment": {
      "patterns": [
        {
          "name": "comment.line.number-sign.elvish",
          "match": "#.*$"
        }
      ]
    },
    "singleQuotedString": {
      "patterns": [
        {
          "name": "string.quoted.single.elvish",
          "begin": "'",
          "end": "'"
        }
      ]
    },
    "doubleQuotedString": {
      "patterns": [
        {
          "name": "string.quoted.double.elvish",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "invalid.illegal.elvish",
              "match": "\\\\*"
            },
            {
              "name": "constant.character.escape.elvish",
              "match": "\\\\w"
            }
          ]
        }
      ]
    },
    "map": {
      "comment": "Map and Keyword Map Highlighting",
      "match": "(&)(\\S*)(=)",
      "captures": {
        "1": {
          "name": "keyword.operator.elvish"
        },
        "2": {
          "name": "variable.parameter.elvish"
        },
        "3": {
          "name": "keyword.operator.elvish"
        }
      }
    },
    "elvishEnvar": {
      "name": "variable.other.elvish",
      "comment": "Elvish Env-var",
      "match": "\\$*E:\\w*\\b"
    },
    "functionDef": {
      "comment": "Elvish function definition",
      "begin": "(fn) (\\S*)",
      "beginCaptures": {
        "1": {
          "name": "storage.type.function.elvish"
        },
        "2": {
          "name": "entity.function.name.elvish"
        }
      },
      "end": "\\{",
      "patterns": [
        {
          "begin": "\\[",
          "end": "\\]",
          "patterns": [
            {
              "include": "#map"
            },
            {
              "include": "#builtinVars"
            },
            {
              "match": "&",
              "name": "keyword.operator.elvish"
            },
            {
              "match": "\\(([\\w-]*)\\) ?",
              "captures": {
                "1": {
                  "name": "entity.function.name.elvish"
                }
              }
            },
            {
              "match": "(@?[\\w-]*) ?",
              "captures": {
                "1": {
                  "name": "variable.parameter.elvish"
                }
              }
            }
          ]
        }
      ]
    }
  },
  "scopeName": "source.elvish"
}
